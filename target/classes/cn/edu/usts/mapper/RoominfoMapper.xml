<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.usts.mapper.RoominfoMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.usts.pojo.Roominfo" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="room_name" property="roomName" jdbcType="NVARCHAR" />
    <result column="room_type_id" property="roomTypeId" jdbcType="NVARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="room_number" property="roomNumber" jdbcType="NVARCHAR" />
    <result column="floor" property="floor" jdbcType="INTEGER" />
    <result column="building_name" property="buildingName" jdbcType="NVARCHAR" />
    <result column="usage_area" property="usageArea" jdbcType="DECIMAL" />
    <result column="campus" property="campus" jdbcType="NVARCHAR" />
    <result column="college" property="college" jdbcType="NVARCHAR" />
    <result column="key_administrator_id" property="keyAdministratorId" jdbcType="INTEGER" />
    <result column="door_count" property="doorCount" jdbcType="INTEGER" />
    <result column="area_unit" property="areaUnit" jdbcType="INTEGER" />
    <result column="reserve_unit" property="reserveUnit" jdbcType="INTEGER" />
    <result column="doorPlates_count" property="doorplatesCount" jdbcType="INTEGER" />
    <result column="remarks" property="remarks" jdbcType="NVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, room_name, room_type_id, status, room_number, floor, building_name, usage_area, 
    campus, college, key_administrator_id, door_count, area_unit, reserve_unit, doorPlates_count, 
    remarks
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.edu.usts.pojo.RoominfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from RoomInfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from RoomInfo
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from RoomInfo
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.edu.usts.pojo.RoominfoExample" >
    delete from RoomInfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.edu.usts.pojo.Roominfo" >
    insert into RoomInfo (ID, room_name, room_type_id, 
      status, room_number, floor, 
      building_name, usage_area, campus, 
      college, key_administrator_id, door_count, 
      area_unit, reserve_unit, doorPlates_count, 
      remarks)
    values (#{id,jdbcType=INTEGER}, #{roomName,jdbcType=NVARCHAR}, #{roomTypeId,jdbcType=NVARCHAR}, 
      #{status,jdbcType=INTEGER}, #{roomNumber,jdbcType=NVARCHAR}, #{floor,jdbcType=INTEGER}, 
      #{buildingName,jdbcType=NVARCHAR}, #{usageArea,jdbcType=DECIMAL}, #{campus,jdbcType=NVARCHAR}, 
      #{college,jdbcType=NVARCHAR}, #{keyAdministratorId,jdbcType=INTEGER}, #{doorCount,jdbcType=INTEGER}, 
      #{areaUnit,jdbcType=INTEGER}, #{reserveUnit,jdbcType=INTEGER}, #{doorplatesCount,jdbcType=INTEGER}, 
      #{remarks,jdbcType=NVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.usts.pojo.Roominfo" >
    insert into RoomInfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="roomName != null" >
        room_name,
      </if>
      <if test="roomTypeId != null" >
        room_type_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="roomNumber != null" >
        room_number,
      </if>
      <if test="floor != null" >
        floor,
      </if>
      <if test="buildingName != null" >
        building_name,
      </if>
      <if test="usageArea != null" >
        usage_area,
      </if>
      <if test="campus != null" >
        campus,
      </if>
      <if test="college != null" >
        college,
      </if>
      <if test="keyAdministratorId != null" >
        key_administrator_id,
      </if>
      <if test="doorCount != null" >
        door_count,
      </if>
      <if test="areaUnit != null" >
        area_unit,
      </if>
      <if test="reserveUnit != null" >
        reserve_unit,
      </if>
      <if test="doorplatesCount != null" >
        doorPlates_count,
      </if>
      <if test="remarks != null" >
        remarks,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roomName != null" >
        #{roomName,jdbcType=NVARCHAR},
      </if>
      <if test="roomTypeId != null" >
        #{roomTypeId,jdbcType=NVARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="roomNumber != null" >
        #{roomNumber,jdbcType=NVARCHAR},
      </if>
      <if test="floor != null" >
        #{floor,jdbcType=INTEGER},
      </if>
      <if test="buildingName != null" >
        #{buildingName,jdbcType=NVARCHAR},
      </if>
      <if test="usageArea != null" >
        #{usageArea,jdbcType=DECIMAL},
      </if>
      <if test="campus != null" >
        #{campus,jdbcType=NVARCHAR},
      </if>
      <if test="college != null" >
        #{college,jdbcType=NVARCHAR},
      </if>
      <if test="keyAdministratorId != null" >
        #{keyAdministratorId,jdbcType=INTEGER},
      </if>
      <if test="doorCount != null" >
        #{doorCount,jdbcType=INTEGER},
      </if>
      <if test="areaUnit != null" >
        #{areaUnit,jdbcType=INTEGER},
      </if>
      <if test="reserveUnit != null" >
        #{reserveUnit,jdbcType=INTEGER},
      </if>
      <if test="doorplatesCount != null" >
        #{doorplatesCount,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        #{remarks,jdbcType=NVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.usts.pojo.RoominfoExample" resultType="java.lang.Integer" >
    select count(*) from RoomInfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update RoomInfo
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.roomName != null" >
        room_name = #{record.roomName,jdbcType=NVARCHAR},
      </if>
      <if test="record.roomTypeId != null" >
        room_type_id = #{record.roomTypeId,jdbcType=NVARCHAR},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.roomNumber != null" >
        room_number = #{record.roomNumber,jdbcType=NVARCHAR},
      </if>
      <if test="record.floor != null" >
        floor = #{record.floor,jdbcType=INTEGER},
      </if>
      <if test="record.buildingName != null" >
        building_name = #{record.buildingName,jdbcType=NVARCHAR},
      </if>
      <if test="record.usageArea != null" >
        usage_area = #{record.usageArea,jdbcType=DECIMAL},
      </if>
      <if test="record.campus != null" >
        campus = #{record.campus,jdbcType=NVARCHAR},
      </if>
      <if test="record.college != null" >
        college = #{record.college,jdbcType=NVARCHAR},
      </if>
      <if test="record.keyAdministratorId != null" >
        key_administrator_id = #{record.keyAdministratorId,jdbcType=INTEGER},
      </if>
      <if test="record.doorCount != null" >
        door_count = #{record.doorCount,jdbcType=INTEGER},
      </if>
      <if test="record.areaUnit != null" >
        area_unit = #{record.areaUnit,jdbcType=INTEGER},
      </if>
      <if test="record.reserveUnit != null" >
        reserve_unit = #{record.reserveUnit,jdbcType=INTEGER},
      </if>
      <if test="record.doorplatesCount != null" >
        doorPlates_count = #{record.doorplatesCount,jdbcType=INTEGER},
      </if>
      <if test="record.remarks != null" >
        remarks = #{record.remarks,jdbcType=NVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update RoomInfo
    set ID = #{record.id,jdbcType=INTEGER},
      room_name = #{record.roomName,jdbcType=NVARCHAR},
      room_type_id = #{record.roomTypeId,jdbcType=NVARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      room_number = #{record.roomNumber,jdbcType=NVARCHAR},
      floor = #{record.floor,jdbcType=INTEGER},
      building_name = #{record.buildingName,jdbcType=NVARCHAR},
      usage_area = #{record.usageArea,jdbcType=DECIMAL},
      campus = #{record.campus,jdbcType=NVARCHAR},
      college = #{record.college,jdbcType=NVARCHAR},
      key_administrator_id = #{record.keyAdministratorId,jdbcType=INTEGER},
      door_count = #{record.doorCount,jdbcType=INTEGER},
      area_unit = #{record.areaUnit,jdbcType=INTEGER},
      reserve_unit = #{record.reserveUnit,jdbcType=INTEGER},
      doorPlates_count = #{record.doorplatesCount,jdbcType=INTEGER},
      remarks = #{record.remarks,jdbcType=NVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.usts.pojo.Roominfo" >
    update RoomInfo
    <set >
      <if test="roomName != null" >
        room_name = #{roomName,jdbcType=NVARCHAR},
      </if>
      <if test="roomTypeId != null" >
        room_type_id = #{roomTypeId,jdbcType=NVARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="roomNumber != null" >
        room_number = #{roomNumber,jdbcType=NVARCHAR},
      </if>
      <if test="floor != null" >
        floor = #{floor,jdbcType=INTEGER},
      </if>
      <if test="buildingName != null" >
        building_name = #{buildingName,jdbcType=NVARCHAR},
      </if>
      <if test="usageArea != null" >
        usage_area = #{usageArea,jdbcType=DECIMAL},
      </if>
      <if test="campus != null" >
        campus = #{campus,jdbcType=NVARCHAR},
      </if>
      <if test="college != null" >
        college = #{college,jdbcType=NVARCHAR},
      </if>
      <if test="keyAdministratorId != null" >
        key_administrator_id = #{keyAdministratorId,jdbcType=INTEGER},
      </if>
      <if test="doorCount != null" >
        door_count = #{doorCount,jdbcType=INTEGER},
      </if>
      <if test="areaUnit != null" >
        area_unit = #{areaUnit,jdbcType=INTEGER},
      </if>
      <if test="reserveUnit != null" >
        reserve_unit = #{reserveUnit,jdbcType=INTEGER},
      </if>
      <if test="doorplatesCount != null" >
        doorPlates_count = #{doorplatesCount,jdbcType=INTEGER},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=NVARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.usts.pojo.Roominfo" >
    update RoomInfo
    set room_name = #{roomName,jdbcType=NVARCHAR},
      room_type_id = #{roomTypeId,jdbcType=NVARCHAR},
      status = #{status,jdbcType=INTEGER},
      room_number = #{roomNumber,jdbcType=NVARCHAR},
      floor = #{floor,jdbcType=INTEGER},
      building_name = #{buildingName,jdbcType=NVARCHAR},
      usage_area = #{usageArea,jdbcType=DECIMAL},
      campus = #{campus,jdbcType=NVARCHAR},
      college = #{college,jdbcType=NVARCHAR},
      key_administrator_id = #{keyAdministratorId,jdbcType=INTEGER},
      door_count = #{doorCount,jdbcType=INTEGER},
      area_unit = #{areaUnit,jdbcType=INTEGER},
      reserve_unit = #{reserveUnit,jdbcType=INTEGER},
      doorPlates_count = #{doorplatesCount,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=NVARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
</mapper>